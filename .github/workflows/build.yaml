name: Continuous Integration

on:
  pull_request:
    branches:
      - main

jobs:
  build:
    name: workflow
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_USERNAME }}
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check MySQL Connection
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_PORT: ${{ secrets.MYSQL_PORT }}
          MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
        run: |
        

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Sleep for 10 seconds
        run: sleep 10s

      - name: Install dependencies
        run: mvn clean install -DskipTests

      - name: Run tests
        run: |
          mvn test -Dspring.profiles.active=githubactions \
                  -Dspring.datasource.url="jdbc:mysql://127.0.0.1:3306/${{ secrets.MYSQL_DATABASE }}?useSSL=false&allowPublicKeyRetrieval=true&createDatabaseIfNotExist=true" \
                  -Dspring.datasource.username="${{ secrets.MYSQL_USERNAME }}" \
                  -Dspring.datasource.password="${{ secrets.MYSQL_PASSWORD }}"
       

      - name: Display MySQL logs
        if: failure()
        run: docker logs mysql

      - name: Packer Init
        run: |
          packer init packer

      - name: Packer Format
        run: |
          packer fmt -check .

      - name: Packer Validate
        env:
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
        run: |
          packer validate packer/*.pkr.hcl